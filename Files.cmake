include_guard(GLOBAL)

function(_clean_file_path VARIABLE PATH)
    get_filename_component(PATH ${PATH} ABSOLUTE)
    file(RELATIVE_PATH ${VARIABLE} ${CMAKE_CURRENT_SOURCE_DIR} ${PATH})
    hoist_variable(${VARIABLE})
endfunction()

function(_should_add_file OUTPUT PATH)
    get_filename_component(EXTENSION ${PATH} EXT)
    if(EXTENSION MATCHES "^\\.([A-Za-z0-9_]+)(\\..*)+$")
        if (CMAKE_MATCH_1 STREQUAL PROJECT_PLATFORM)
            set(${OUTPUT} TRUE)
        else()
            set(${OUTPUT} FALSE)
        endif()
    else()
        set(${OUTPUT} TRUE)
    endif()
    hoist_variable(${OUTPUT})
endfunction()

function(add_file PATH)
    _clean_file_path(PATH ${PATH})
    _should_add_file(SHOULD_BE_ADDED ${PATH})
    if (SHOULD_BE_ADDED)
        list(APPEND CURRENT_PROJECT_SOURCES ${PATH})
        hoist_variable(CURRENT_PROJECT_SOURCES)
    else()
    endif()
endfunction()

function(del_file PATH)
    _clean_file_path(PATH ${PATH})
    list(REMOVE_ITEM CURRENT_PROJECT_SOURCES ${PATH})
    hoist_variable(CURRENT_PROJECT_SOURCES)
endfunction()

function(_add_dir_non_recursive PATH)
    aux_source_directory(${PATH} TARGET_DIR_SOURCES)
    foreach(TARGET_FILE ${TARGET_DIR_SOURCES})
        add_file(${TARGET_FILE})
    endforeach()
    hoist_variable(CURRENT_PROJECT_SOURCES)
endfunction()

function(_add_dir_recursive PATH)
    file(GLOB_RECURSE CHILD_LIST ${PATH}/*)
    foreach(CHILD_PATH ${CHILD_LIST})
        get_filename_component(DIR_PATH ${CHILD_PATH} DIRECTORY)
        if(IS_DIRECTORY ${DIR_PATH})
            list(APPEND DIR_LIST ${DIR_PATH})
        endif()
    endforeach()
    list(REMOVE_DUPLICATES DIR_LIST)

    foreach(DIR_PATH ${DIR_LIST})
        _add_dir_non_recursive(${DIR_PATH})
    endforeach()
    hoist_variable(CURRENT_PROJECT_SOURCES)
endfunction()

function(add_dir PATH)
    cmake_parse_arguments(PARSE_ARGV 1 DIR "RECURSIVE" "" "")
    if (${DIR_RECURSIVE})
        _add_dir_recursive(${PATH})
    else()
        _add_dir_non_recursive(${PATH})
    endif()
    hoist_variable(CURRENT_PROJECT_SOURCES)
endfunction()